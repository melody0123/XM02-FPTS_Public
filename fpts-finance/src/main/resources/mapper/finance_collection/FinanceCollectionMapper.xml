<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fpts.finance_collection.mapper.FinanceCollectionMapper">
    
    <resultMap type="FinanceCollection" id="FinanceCollectionResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="productId"    column="product_id"    />
        <result property="name"    column="name"    />
        <result property="type"    column="type"    />
        <result property="newPrice"    column="new_price"    />
        <result property="openPrice"    column="open_price"    />
        <result property="yesterdayPrice"    column="yesterday_price"    />
        <result property="maxPrice"    column="max_price"    />
        <result property="minPrice"    column="min_price"    />
        <result property="increase"    column="increase"    />
        <result property="increaseRate"    column="increase_rate"    />
        <result property="turnoverRate"    column="turnover_rate"    />
    </resultMap>

    <sql id="selectFinanceCollectionVo">
        select id, product_id, user_id from finance_collection
    </sql>

    <select id="selectFinanceCollectionList" parameterType="FinanceCollection" resultMap="FinanceCollectionResult">
        <include refid="selectFinanceCollectionVo"/>
        <where>1=1
            <if test="productId != null  and productId != ''"> and product_id = #{productId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
        </where>
        ${params.dataScope}
    </select>
    
    <select id="selectFinanceCollectionById" parameterType="Long" resultMap="FinanceCollectionResult">
        <include refid="selectFinanceCollectionVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertFinanceCollection" parameterType="FinanceCollection" useGeneratedKeys="true" keyProperty="id">
        insert into finance_collection
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null and productId != ''">product_id,</if>
            <if test="userId != null">user_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null and productId != ''">#{productId},</if>
            <if test="userId != null">#{userId},</if>
         </trim>
    </insert>

    <update id="updateFinanceCollection" parameterType="FinanceCollection">
        update finance_collection
        <trim prefix="SET" suffixOverrides=",">
            <if test="productId != null and productId != ''">product_id = #{productId},</if>
            <if test="userId != null">user_id = #{userId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteFinanceCollectionById" parameterType="Long">
        delete from finance_collection where id = #{id}
    </delete>

    <delete id="deleteFinanceCollectionByIds" parameterType="String">
        delete from finance_collection where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectFinanceCollectionListWithColl" parameterType="FinanceCollection" resultMap="FinanceCollectionResult">
        SELECT fc.id, fc.user_id,
        fs.product_id, fs.`name`, fs.type, fs.new_price, fs.open_price, fs.yesterday_price, fs.max_price, fs.min_price, fs.increase, fs.increase_rate, fs.turnover_rate
        from finance_collection fc
        LEFT JOIN  finance_summary fs  on fc.product_id = fs.product_id
        <where> 1=1
            <if test="productId != null  and productId != ''"> and fs.product_id = #{productId}</if>
            <if test="name != null  and name != ''"> and fs.name like concat('%', #{name}, '%')</if>
            <if test="type != null  and type != ''"> and fs.type = #{type}</if>
        </where>
        ${params.dataScope}
    </select>

    <select id="selectFinanceCollectionByIdPid" parameterType="FinanceCollection" resultMap="FinanceCollectionResult">
        <include refid="selectFinanceCollectionVo"/>
        where user_id = #{userId} and product_id=#{productId}
    </select>

</mapper>